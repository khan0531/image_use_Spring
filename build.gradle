plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    all {
        exclude group: "org.slf4j", module: "slf4j-simple"
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'software.amazon.awssdk:s3:2.17.100'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.3'
    implementation 'commons-io:commons-io:2.15.0'
    implementation 'net.coobird:thumbnailator:0.4.14'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.json:json:20231013'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // web socket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // messaging
    implementation 'org.springframework:spring-messaging'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // redis
    implementation 'it.ozimov:embedded-redis:0.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.lettuce:lettuce-core:6.2.6.RELEASE'

    // aws ses
    implementation platform('software.amazon.awssdk:bom:2.15.0')
    implementation 'software.amazon.awssdk:ses'
    implementation 'com.amazonaws:aws-java-sdk-ses:1.12.408'

    // azure ocr
    implementation 'com.azure:azure-ai-formrecognizer:3.1.0'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'

    // database
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Querydsl 소스 생성을 위한 설정
def querydslDir = 'src/main/generated'

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
    useJUnitPlatform()
}
